package dsa;

public class QuickSort {
	int partition(int a[],int l,int r) {
		int pi = a[r];
		int j=l;
		for(int i=l;i<r;i++) {
			if(a[i]<pi) {
				int temp = a[i];
				a[i] = a[j];
				a[j] = temp;
				j++;
			}
		}
		if(j<r) {
			int temp = a[r];
			a[r] = a[j];
			a[j]= temp;
		}
		return j;
	}
	void quickSort(int a[],int l,int r) {
		if(l<r) {
			int n = partition(a,l,r);
			quickSort(a,l,n-1);
			quickSort(a,n+1,r);	
		}
		
	}
	
	void printArray(int a[]) {
		for(int i=0;i<a.length;i++) {
			System.out.println(a[i]);
		}
	}
	
	public static void main(String[] args) {
		int a[] = {1,2,3,4,5,6,7,8};
		QuickSort m = new QuickSort();
		m.quickSort(a,0,a.length-1);
		m.printArray(a);

	}

}
