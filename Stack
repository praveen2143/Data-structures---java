package dsa;
class Stack{
	private int arr[];
	private int top;
	private int size;
	
	Stack(int size){
		top = -1;
		arr = new int[size];
		this.size = size;
	}
	
	Boolean isFull() {
		if(top >= size-1) {
			return true;
		}
		return false;
	}
	
	Boolean isEmpty() {
		if(top <= -1) {
			return true;
		}
		return false;
	}
	
	void push(int num) {
		if(isFull()) {
			System.out.println("Stack is full");
		}else {
			arr[++top] = num;
		}
	}
	
	int pop() {
		if(isEmpty()) {
			System.out.println("Stack is Empty");
			return -9999;
		}else {
			int temp = arr[top--];
			return temp;
		}
	}
	
	void printStack() {
		if(isEmpty()) {
			System.out.println("Stack is empty");
		}else {
			for(int i=0;i<=top;i++) {
				System.out.println(arr[i]);
			}
		}
		
	}
}
public class Stackdsa {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Stack s = new Stack(5);
		s.pop();
		s.push(1);
		s.push(2);
		s.push(3);
		s.push(4);
		s.push(5);
		s.push(6);
		System.out.println(s.pop());
		System.out.println(s.pop());
		System.out.println(s.pop());
		System.out.println(s.pop());
		System.out.println(s.pop());

	}

}
