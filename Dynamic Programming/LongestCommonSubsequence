class Sequence{
	void findLongestSequence(String s1,String s2) {
		int[][] mat = new int[s1.length()+1][s2.length()+1];
		for(int i=0;i<=s1.length();i++) {
			for(int j=0;j<=s2.length();j++) {
				if(i==0 || j==0) {
					mat[i][j] = 0;
				}else {
					if(s1.charAt(i-1) == s2.charAt(j-1)) {
						mat[i][j] = mat[i-1][j-1] + 1;
					}else {
						mat[i][j] = Math.max(mat[i-1][j], mat[i][j-1]);
					}
				}
			}
		}
		
		int n = mat[s1.length()][s2.length()];
		char[] seq = new char[n];
		int i = s1.length();
		int j = s2.length();
		while(i>0 && j>0) {
			if(s1.charAt(i-1) == s2.charAt(j-1)) {
				n = n-1;
				seq[n] = s1.charAt(i-1);
				i--;
				j--;
			}else {
				if(mat[i-1][j] > mat[i][j-1]) {
					i--;
				}else {
					j--;
				}
			}
		}
		
		System.out.println(new String(seq));
	}
}
public class LongestCommonSubsequence {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String s1 = "abcefg";
		String s2 = "bleg";
		Sequence s = new Sequence();
		s.findLongestSequence(s1,s2);

	}

}
